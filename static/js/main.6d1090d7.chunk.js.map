{"version":3,"sources":["logo.svg","components/Header.js","components/articles.js","components/body.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","onclick","e","settab","target","innerHTML","className","onClick","articles","setarticles","loading","setloading","section","toString","a","axios","get","then","data1","data","results","console","log","useEffect","getArticles","map","art","href","url","multimedia","style","height","width","src","title","abstract","published_date","substring","body","footer","App","tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,kC,qJCwE5BC,MArEf,SAAgBC,GAAQ,IAAD,EACCC,mBAAS,QADV,mBAEfC,GAFe,UAEL,SAACC,GACfH,EAAMI,OAAOD,EAAEE,OAAOC,aAExB,OACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cAAd,mBACA,wBAAIA,UAAU,YACZ,4BACE,uBAAGA,UAAU,eAAeC,QAASN,GAArC,SAIF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,gBAKF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,aAIF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,YAIF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,SAKF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,SAIF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,YAKA,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,aAIF,4BACE,uBAAGK,UAAU,eAAeC,QAASN,GAArC,WAIF,4BACA,uBAAGK,UAAU,eAAeC,QAASN,GAArC,mB,yCCnDG,G,YAAA,SAAUF,GAAQ,IAAD,EAECC,mBAAS,IAFV,mBAExBQ,EAFwB,KAEdC,EAFc,OAGDT,oBAAS,GAHR,mBAGxBU,EAHwB,KAGfC,EAHe,KAKxBC,EAAUb,EAAMa,QAAQC,WALA,4CAkB5B,sBAAAC,EAAA,sDAEGC,IAEGC,IACC,6CAA+CJ,EAAU,kDAE1DK,MAAK,SAACC,GAAD,OAAWT,EAAYS,EAAMC,KAAKC,YAAUH,KAAKN,GAAW,IAEpEU,QAAQC,IAAId,GATf,4CAlB4B,sBA8B5B,OAvBAa,QAAQC,IAAIV,GAGdW,qBAAU,WAENF,QAAQC,IAAI,0BACZX,GAAW,GAbe,mCAe5Ba,KACC,CAACZ,IAeA,yBAAKN,UAAU,oBACb,6BAAMI,GAAW,wCAChBF,EAASiB,KAAI,SAACC,GACb,OACE,uBAAGpB,UAAU,gBAAgBqB,KAAMD,EAAIE,KACrC,yBAAKtB,UAAU,kBACZoB,EAAIG,YACH,yBACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCC,IAAKP,EAAIG,WAAW,GAAGD,MAG3B,yBAAKtB,UAAU,eACb,yBAAKA,UAAU,gBAAgBoB,EAAIQ,OACnC,yBAAK5B,UAAU,YAAYoB,EAAIS,UAC/B,+CACkBT,EAAIU,eAAeC,UAAU,EAAG,cC7CrDC,MAVf,SAAcvC,GAEV,OACI,yBAAKO,UAAU,QACX,2CAAiBP,EAAMa,QAAvB,oBACA,kBAAC,EAAD,CAAUA,QAASb,EAAMa,YCGtB2B,MARf,WACI,OACI,yBAAKjC,UAAU,UACX,iGCgBGkC,MAff,WAAgB,IAAD,EACSxC,mBAAS,SADlB,mBACNyC,EADM,KACDtC,EADC,KAMb,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAAQH,OANZ,SAAoBD,GAClBC,EAAOD,MAML,kBAAC,EAAD,CAAMU,QAAS6B,IACf,kBAAC,EAAD,QCLcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAAAsC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.6d1090d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./../css/components.css\";\r\nimport { useState } from \"react\";\r\nfunction Header(props) {\r\n  const [tab, settab] = useState(\"home\");\r\n  const onclick = (e) => {\r\n    props.settab(e.target.innerHTML);\r\n  };\r\n  return (\r\n    <div className=\"headercontainer\">\r\n      <div className=\"headertitle\">\r\n        <h1 className=\"Reacttimes\">The React Times</h1>\r\n        <li className=\"headerul\">\r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              arts\r\n            </a>\r\n          </ul>\r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              automobiles\r\n            </a>\r\n          </ul>\r\n          \r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              business\r\n            </a>\r\n          </ul>\r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              Fashion\r\n            </a>\r\n          </ul>\r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              Food\r\n            </a>\r\n          </ul>\r\n          \r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              Home\r\n            </a>\r\n          </ul>\r\n          <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              Insider\r\n            </a>\r\n          </ul>\r\n          \r\n            <ul>\r\n              <a className=\"headerbutton\" onClick={onclick}>\r\n                Magazine\r\n              </a>\r\n            </ul>\r\n            <ul>\r\n              <a className=\"headerbutton\" onClick={onclick}>\r\n                Movies\r\n              </a>\r\n                  </ul>\r\n            <ul>\r\n            <a className=\"headerbutton\" onClick={onclick}>\r\n              technology\r\n            </a>\r\n          </ul>\r\n        </li>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport './../css/components.css'\r\nimport Loading from \"react-loading-bar\";\r\nimport \"react-loading-bar/dist/index.css\";\r\n// understanding the data:\r\n// res.data.results[1].title --> gives title \r\n// res.data.results[1].published_date --> published_date\r\n\r\n\r\n// https://api.nytimes.com/svc/topstories/v2/fashion.json?api-key=FdYwTNEiYnub1p4Tulg2nw6MNrLb5h0J\r\nexport default function (props) {\r\n    \r\n const [articles, setarticles] = useState([])\r\n const [loading, setloading] = useState(true)\r\n    \r\n    var section = props.section.toString();\r\n  \r\n    console.log(section)\r\n\r\n    \r\n  useEffect(() => {\r\n    // code to run on component mount\r\n      console.log(\"use Effect running ...\");\r\n      setloading(true)\r\n      \r\n    getArticles();\r\n  }, [section]);\r\n    \r\n    async function getArticles() {\r\n       \r\n       axios\r\n\r\n         .get(\r\n           \"https://api.nytimes.com/svc/topstories/v2/\" + section + \".json?api-key=FdYwTNEiYnub1p4Tulg2nw6MNrLb5h0J\"\r\n         )\r\n         .then((data1) => setarticles(data1.data.results)).then(setloading(false));\r\n       \r\n       console.log(articles)\r\n  }\r\n\r\n    return (\r\n      <div className=\"articlecontainer\">\r\n        <div>{loading && <h1>Loading</h1>}</div>\r\n        {articles.map((art) => {\r\n          return (\r\n            <a className=\"anchorarticle\" href={art.url}>\r\n              <div className=\"articlecontent\">\r\n                {art.multimedia && (\r\n                  <img\r\n                    style={{ height: \"300px\", width: \"300px\" }}\r\n                    src={art.multimedia[0].url}\r\n                  />\r\n                )}\r\n                <div className=\"articletext\">\r\n                  <div className=\"articletitle\">{art.title}</div>\r\n                  <div className=\"abstract\">{art.abstract}</div>\r\n                  <div>\r\n                    Published on : {art.published_date.substring(0, 10)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport \"./../css/components.css\";\r\nimport Articles from \"./articles\"\r\nfunction body(props) {\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <h1>Showing you {props.section} Headlines Today</h1>\r\n            <Articles section={props.section}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default body\r\n","import React from 'react'\r\nimport \"./../css/components.css\";\r\n\r\nfunction footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <h3>The credit for all the articles used goes to the New York Times</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Body from './components/body'\nimport Footer from './components/footer'\n\nfunction App() {\n  const [tab, settab] = useState(\"books\");\n  function settingtab(e) {\n    settab(e);\n    \n  }\n  return (\n    <div className=\"App\">\n      <Header settab={settingtab}/>\n      <Body section={tab}/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}